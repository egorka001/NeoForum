<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE TS SYSTEM "ts.dtd">
<TS>
    <DISCRIPTION>
        <TITLE>NeoForum - форум для быстрого текстового общения в интернете</TITLE>
        <ABOUT>Форум делится на темы, в каждой теме можно создавать отдельные обсуждения, так называемые треды, в которых люди могут писать свои сообщения, т.е. выкладывать посты</ABOUT>
    </DISCRIPTION>
    <SUBJ>
		<CURSUBJ>
			<TITLE>Тема</TITLE>
			<ABOUT>Тема - задаёт область общения, т.е. обобщённая тема для общения, такая как 'спорт' или 'автомобили', в которой пользователи будут создавать свои подтемы(треды). </ABOUT>
			<ABOUT>У темы нет создателя, она задаётся при инициализации форума администраторами.</ABOUT>
		</CURSUBJ>
		<CURSUBJ>
			<TITLE>Тред</TITLE>
			<ABOUT>Тред - подтема, т.е. какая-то конкретная тема для общения внутри основной темы.</ABOUT>
			<ABOUT>Создаётся зарегистрированным пользователем. Удаляется только администратором.</ABOUT>
			<ABOUT>При написании нового поста в тред, тред поднимается в выдаче выше, при запросе API</ABOUT>
			<ABOUT>У каждого треда есть такой свойство, как бамплимит - это количество сообщений, после которого тред перестаёт подниматься в выдаче. Т.е. при запросе к API сначала будут выданы треды до бамплимита, а потом будут выданы треды после бамплимита, даже если в них только что написали новый пост.</ABOUT>
		</CURSUBJ>
		<CURSUBJ>
			<TITLE>Пост</TITLE>
			<ABOUT> - самая минимальная единица общения, т.е. конкретное сообщение в треде.</ABOUT>
			<ABOUT>Создаётся зарегистрированным пользователем. Удаляется только администратором.</ABOUT>
		</CURSUBJ>
		<CURSUBJ>
			<TITLE>Пользователь</TITLE>
			<ABOUT>Пользователь - сущность, которая задаёт темы, треды и посты, а также может их удалять.</ABOUT>
		</CURSUBJ>
	</SUBJ>
	<REST>
		<GENREST>
			<CURREST>Общение происходит только посредством текстовых сообщений</CURREST>
		</GENREST>
		<SUBJREST>
			<CURREST>Тема должна быть односложной</CURREST>
			<CURREST>Темы добавляются и удаляются владельцами форума</CURREST>
			<CURREST>Просматривать темы могут все пользователи</CURREST>
			<CURREST>В теме отображается ограниченное количество тредов</CURREST>
		</SUBJREST>
		<SUBJREST>
			<CURREST>Треды будет 'вспылывать вверх' только до какого-то заданного количества сообщений в нём, после некоторой отметки, он не будет поднимать вверх на странице</CURREST>
			<CURREST>Содержание заголовка треда ограничено количеством символов</CURREST>
			<CURREST>Треды могут создаваться только зарегистрированными пользователями, но удалять треды могут только владельцы форума</CURREST>
		</SUBJREST>
		<SUBJREST>
			<CURREST>Пост состоит из ограниченного числа символов</CURREST>
			<CURREST>Пост может быть добавлем только зарегистрированным пользователем, но удалить его могут только владельцы форума</CURREST>
		</SUBJREST>
		<SUBJREST>
			<CURREST>Чтобы создавать треды и посты надо быть зарегистрированным пользователем</CURREST>
			<CURREST>Чтобы удалять темы, треды, посты надо быть администратором форума</CURREST>
			<CURREST>Регистрация проходит через github oAuth и ником на форуме будет ник на github</CURREST>
		</SUBJREST>
	</REST>
	<USERROLES>
		<ROLE>Незарегистрированный пользователь - любой человек, который просматривает форум, не может ничего создавать</ROLE>
		<ROLE>Зарегистрированный пользователь - человек, который прошёл регистрацию через github oAuth, получил свою запись в система и теперь может создавать треды и посты через API</ROLE>
		<ROLE>Администратор - человек, который прошёл регистрацию через github oAuth и был занесён в список администраторов через доступ к серверу, добавление/удаление тем, тредов, постов через API</ROLE>
	</USERROLES>
	<STRUCT>
		<APPSTRUCT>
			<ABOUT>/main.py - основной файл с flask-сервером, обрабатывает запросы, приходящие на API</ABOUT>
			<ABOUT>/data/config.py - конфигурационный файл, в котором можно задать основные параметры работы форума</ABOUT>
			<ABOUT>/data/interface.py - файл с интерфейсами общения с базой данных</ABOUT>
			<ABOUT>/data/db_scripts.py - файл со скриптами, которые напрямую общаются с базой данных</ABOUT>
			<ABOUT>/start_scripts/init_script.py - файл со скриптом, который создаст файл базы данных</ABOUT>
		</APPSTRUCT>
		<BASESTRUCT>
			<TABLE>
				<TITLE>threads</TITLE>
				<ABOUT>id - номер каждого треда</ABOUT>
				<ABOUT>theme - тема, в которой был создан тред</ABOUT>
				<ABOUT>first_post_id - id первого поста, с которым был создан тред</ABOUT>
				<ABOUT>login - login создателя поста</ABOUT>
				<ABOUT>post_count - количество сообщений с треде</ABOUT>
				<ABOUT>last_update - время последнего добавления сообщения в тред</ABOUT>
				<ABOUT>status - 1, если сообщений меньше, чем бамплимит, 0, если больше</ABOUT>
			</TABLE>
			<TABLE>
				<TITLE>users</TITLE>
				<ABOUT>login - github логин пользователя</ABOUT>
				<ABOUT>token - токен доступа из github oAuth</ABOUT>
				<ABOUT>status - 1, если админ, 0, если обычный пользователь</ABOUT>
			</TABLE>
			<TABLE>
				<TITLE>global_id</TITLE>
				<ABOUT>post - текущее количество постов на форуме</ABOUT>
				<ABOUT>thread - текущее количество тредов на форуме</ABOUT>
			</TABLE>
			<TABLE>
				<TITLE>posts</TITLE>
				<ABOUT>id - номер каждого поста</ABOUT>
				<ABOUT>thread_id - id треда, в котором был написан пост</ABOUT>
				<ABOUT>login - login создателя поста</ABOUT>
				<ABOUT>post_body - текст поста</ABOUT>
				<ABOUT>post_time - время, когда был создан пост</ABOUT>
			</TABLE>
			<TABLE>
				<TITLE>themes</TITLE>
				<ABOUT>theme_name - название темы</ABOUT>
			</TABLE>
		</BASESTRUCT>
	</STRUCT>
	<TECH>
		<ABOUT>BACKEND-часть: python, flask, sqlite3</ABOUT>
		<ABOUT>FRONTEND-часть: html, css, js, react</ABOUT>
		<ABOUT>Сервис регистрации: github oAuth</ABOUT>
		<ABOUT>Сервер: Apache2, wsgi-lib</ABOUT>
		<ABOUT>Вспомогательные программы: xBase, DBSchema</ABOUT>
	</TECH>
</TS>
